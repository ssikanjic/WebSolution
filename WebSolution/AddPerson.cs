///////////////////////////////////////////////////////////////////////////////
//
// This file was automatically generated by RANOREX.
// DO NOT MODIFY THIS FILE! It is regenerated by the designer.
// All your modifications will be lost!
// http://www.ranorex.com
//
///////////////////////////////////////////////////////////////////////////////

using System;
using System.Collections.Generic;
using System.Text;
using System.Text.RegularExpressions;
using System.Drawing;
using System.Threading;
using WinForms = System.Windows.Forms;

using Ranorex;
using Ranorex.Core;
using Ranorex.Core.Testing;
using Ranorex.Core.Repository;

namespace WebSolution
{
#pragma warning disable 0436 //(CS0436) The type 'type' in 'assembly' conflicts with the imported type 'type2' in 'assembly'. Using the type defined in 'assembly'.
    /// <summary>
    ///The AddPerson recording.
    /// </summary>
    [TestModule("7f6b0e01-6ea7-4b8f-922e-cff1a1caf7d3", ModuleType.Recording, 1)]
    public partial class AddPerson : ITestModule
    {
        /// <summary>
        /// Holds an instance of the WebSolutionRepository repository.
        /// </summary>
        public static WebSolutionRepository repo = WebSolutionRepository.Instance;

        static AddPerson instance = new AddPerson();

        /// <summary>
        /// Constructs a new instance.
        /// </summary>
        public AddPerson()
        {
            FName = "Slavisa";
            LName = "Sikanjic";
        }

        /// <summary>
        /// Gets a static instance of this recording.
        /// </summary>
        public static AddPerson Instance
        {
            get { return instance; }
        }

#region Variables

        string _FName;

        /// <summary>
        /// Gets or sets the value of variable FName.
        /// </summary>
        [TestVariable("a5a0fdca-1105-445a-9a04-bdde6b1ec923")]
        public string FName
        {
            get { return _FName; }
            set { _FName = value; }
        }

        string _LName;

        /// <summary>
        /// Gets or sets the value of variable LName.
        /// </summary>
        [TestVariable("b3aabbaf-d7f8-4135-845b-df97d21e89a9")]
        public string LName
        {
            get { return _LName; }
            set { _LName = value; }
        }

        /// <summary>
        /// Gets or sets the value of variable Category.
        /// </summary>
        [TestVariable("b400e258-75d0-4d41-822f-54d7a0b5c69c")]
        public string Category
        {
            get { return repo.Category; }
            set { repo.Category = value; }
        }

        /// <summary>
        /// Gets or sets the value of variable varGender.
        /// </summary>
        [TestVariable("e31303bb-d39c-40a7-af11-416c12ea8fe3")]
        public string varGender
        {
            get { return repo.varGender; }
            set { repo.varGender = value; }
        }

#endregion

        /// <summary>
        /// Starts the replay of the static recording <see cref="Instance"/>.
        /// </summary>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", global::Ranorex.Core.Constants.CodeGenVersion)]
        public static void Start()
        {
            TestModuleRunner.Run(Instance);
        }

        /// <summary>
        /// Performs the playback of actions in this recording.
        /// </summary>
        /// <remarks>You should not call this method directly, instead pass the module
        /// instance to the <see cref="TestModuleRunner.Run(ITestModule)"/> method
        /// that will in turn invoke this method.</remarks>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", global::Ranorex.Core.Constants.CodeGenVersion)]
        void ITestModule.Run()
        {
            Mouse.DefaultMoveTime = 300;
            Keyboard.DefaultKeyPressTime = 20;
            Delay.SpeedFactor = 1.00;

            Init();

            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'ApplicationUnderTest.FName' at Center.", repo.ApplicationUnderTest.FNameInfo, new RecordItemIndex(0));
            repo.ApplicationUnderTest.FName.Click();
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence from variable '$FName' with focus on 'ApplicationUnderTest.FName'.", repo.ApplicationUnderTest.FNameInfo, new RecordItemIndex(1));
            repo.ApplicationUnderTest.FName.PressKeys(FName);
            Delay.Milliseconds(0);
            
            try {
                //Key_sequence_FirstName(repo.ApplicationUnderTest.FNameInfo);
                //Delay.Milliseconds(0);
            } catch(Exception ex) { Report.Log(ReportLevel.Warn, "Module", "(Optional Action) " + ex.Message, new RecordItemIndex(2)); }
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'ApplicationUnderTest.LName' at Center.", repo.ApplicationUnderTest.LNameInfo, new RecordItemIndex(3));
            repo.ApplicationUnderTest.LName.Click();
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence from variable '$LName' with focus on 'ApplicationUnderTest.LName'.", repo.ApplicationUnderTest.LNameInfo, new RecordItemIndex(4));
            repo.ApplicationUnderTest.LName.PressKeys(LName);
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'ApplicationUnderTest.Category' at Center.", repo.ApplicationUnderTest.CategoryInfo, new RecordItemIndex(5));
            repo.ApplicationUnderTest.Category.Click();
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'ApplicationUnderTest.Gender' at Center.", repo.ApplicationUnderTest.GenderInfo, new RecordItemIndex(6));
            repo.ApplicationUnderTest.Gender.Click();
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'ApplicationUnderTest.InputTagAdd' at Center.", repo.ApplicationUnderTest.InputTagAddInfo, new RecordItemIndex(7));
            repo.ApplicationUnderTest.InputTagAdd.Click();
            Delay.Milliseconds(0);
            
        }

#region Image Feature Data
#endregion
    }
#pragma warning restore 0436
}
